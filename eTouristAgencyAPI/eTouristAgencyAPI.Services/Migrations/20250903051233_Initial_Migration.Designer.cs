// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eTouristAgencyAPI.Services.Database;

#nullable disable

namespace eTouristAgencyAPI.Services.Migrations
{
    [DbContext(typeof(eTouristAgencyDbContext))]
    [Migration("20250903051233_Initial_Migration")]
    partial class Initial_Migration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId")
                        .HasName("PK__UserRole__AF2760ADD5D51AE1");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRole", (string)null);
                });

            modelBuilder.Entity("eTouristAgencyAPI.Services.Database.Models.City", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__City__3214EC07312A9241");

                    b.HasIndex("CountryId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("City");
                });

            modelBuilder.Entity("eTouristAgencyAPI.Services.Database.Models.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Country__3214EC0770F2D1F2");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("eTouristAgencyAPI.Services.Database.Models.EmailVerification", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmailVerificationTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ValidTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("VerificationKey")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id")
                        .HasName("PK__EmailVer__3214EC0745ED4E1C");

                    b.HasIndex("EmailVerificationTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("EmailVerification");
                });

            modelBuilder.Entity("eTouristAgencyAPI.Services.Database.Models.EntityCode", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__EntityCo__3214EC075BF0FCF7");

                    b.ToTable("EntityCode");
                });

            modelBuilder.Entity("eTouristAgencyAPI.Services.Database.Models.EntityCodeValue", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("EntityCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__EntityCo__3214EC07AD59F1BA");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("EntityCodeId");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("EntityCodeValue");
                });

            modelBuilder.Entity("eTouristAgencyAPI.Services.Database.Models.Hotel", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("StarRating")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Hotel__3214EC07EB0C59A4");

                    b.HasIndex("CityId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("Hotel");
                });

            modelBuilder.Entity("eTouristAgencyAPI.Services.Database.Models.HotelImage", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("DisplayOrderWithinHotel")
                        .HasColumnType("int");

                    b.Property<Guid>("HotelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("ImageBytes")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id")
                        .HasName("PK__HotelIma__3214EC070ECAAFD2");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("HotelId");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("HotelImage");
                });

            modelBuilder.Entity("eTouristAgencyAPI.Services.Database.Models.Offer", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BoardTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Carriers")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("DeparturePlace")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FirstPaymentDeadline")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("HotelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastPaymentDeadline")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("NumberOfNights")
                        .HasColumnType("int");

                    b.Property<long>("OfferNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("OfferNo"));

                    b.Property<Guid>("OfferStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("TripEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TripStartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__Offer__3214EC07D16F6D7A");

                    b.HasIndex("BoardTypeId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("HotelId");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("OfferStatusId");

                    b.HasIndex(new[] { "OfferNo" }, "UQ__Offer__8EBC0FBBA8F908E0")
                        .IsUnique();

                    b.ToTable("Offer");
                });

            modelBuilder.Entity("eTouristAgencyAPI.Services.Database.Models.OfferDiscount", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(15, 2)");

                    b.Property<Guid>("DiscountTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("OfferId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__OfferDis__3214EC072C962493");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DiscountTypeId");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("OfferId");

                    b.ToTable("OfferDiscount");
                });

            modelBuilder.Entity("eTouristAgencyAPI.Services.Database.Models.OfferDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<byte[]>("DocumentBytes")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("DocumentName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id")
                        .HasName("PK__OfferDoc__3214EC072A97EF5E");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("OfferDocument");
                });

            modelBuilder.Entity("eTouristAgencyAPI.Services.Database.Models.OfferImage", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<byte[]>("ImageBytes")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id")
                        .HasName("PK__OfferIma__3214EC07B466F2B3");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("OfferImage");
                });

            modelBuilder.Entity("eTouristAgencyAPI.Services.Database.Models.Passenger", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DisplayOrderWithinReservation")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ReservationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__Passenge__3214EC07ED8E0702");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("ReservationId");

                    b.ToTable("Passenger");
                });

            modelBuilder.Entity("eTouristAgencyAPI.Services.Database.Models.PassengerDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<byte[]>("DocumentBytes")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("DocumentName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id")
                        .HasName("PK__Passenge__3214EC07FBE8BD9F");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("PassengerDocument");
                });

            modelBuilder.Entity("eTouristAgencyAPI.Services.Database.Models.Reservation", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CancellationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OfferDiscountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("PaidAmount")
                        .HasColumnType("decimal(15, 2)");

                    b.Property<long>("ReservationNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ReservationNo"));

                    b.Property<Guid>("ReservationStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("TotalCost")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__Reservat__3214EC0763351517");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("OfferDiscountId");

                    b.HasIndex("ReservationStatusId");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.ToTable("Reservation");
                });

            modelBuilder.Entity("eTouristAgencyAPI.Services.Database.Models.ReservationPayment", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("DisplayOrderWithinReservation")
                        .HasColumnType("int");

                    b.Property<byte[]>("DocumentBytes")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("DocumentName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("ReservationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__Reservat__3214EC070E3A6F26");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("ReservationId");

                    b.ToTable("ReservationPayment");
                });

            modelBuilder.Entity("eTouristAgencyAPI.Services.Database.Models.ReservationReview", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccommodationRating")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("ServiceRating")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Reservat__3214EC078CCCD554");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("ReservationReview");
                });

            modelBuilder.Entity("eTouristAgencyAPI.Services.Database.Models.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Role__3214EC0714C62030");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("eTouristAgencyAPI.Services.Database.Models.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ChildDiscount")
                        .HasColumnType("decimal(15, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("DisplayOrderWithinOffer")
                        .HasColumnType("int");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("OfferId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("PricePerPerson")
                        .HasColumnType("decimal(15, 2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("RoomTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ShortDescription")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Room__3214EC07CAD05FC9");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("OfferId");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Room");
                });

            modelBuilder.Entity("eTouristAgencyAPI.Services.Database.Models.RoomType", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("RoomCapacity")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__RoomType__3214EC07690A4341");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("RoomType");
                });

            modelBuilder.Entity("eTouristAgencyAPI.Services.Database.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__User__3214EC0746353BBB");

                    b.HasIndex(new[] { "Username" }, "UQ__User__536C85E4D22B85BE")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "UQ__User__A9D105345CE04165")
                        .IsUnique();

                    b.ToTable("User");
                });

            modelBuilder.Entity("eTouristAgencyAPI.Services.Database.Models.UserFirebaseToken", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("FirebaseToken")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__UserFire__3214EC07549D845B");

                    b.HasIndex("UserId");

                    b.ToTable("UserFirebaseToken");
                });

            modelBuilder.Entity("eTouristAgencyAPI.Services.Database.Models.UserTag", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__UserTag__3214EC076AFBE017");

                    b.HasIndex("UserId");

                    b.ToTable("UserTag");
                });

            modelBuilder.Entity("UserRole", b =>
                {
                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FKUserRole885973");

                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FKUserRole407378");
                });

            modelBuilder.Entity("eTouristAgencyAPI.Services.Database.Models.City", b =>
                {
                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .IsRequired()
                        .HasConstraintName("FKCity241283");

                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.User", "CreatedByNavigation")
                        .WithMany("CityCreatedByNavigations")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FKCity880359");

                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.User", "ModifiedByNavigation")
                        .WithMany("CityModifiedByNavigations")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("FKCity641978");

                    b.Navigation("Country");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("ModifiedByNavigation");
                });

            modelBuilder.Entity("eTouristAgencyAPI.Services.Database.Models.Country", b =>
                {
                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.User", "CreatedByNavigation")
                        .WithMany("CountryCreatedByNavigations")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FKCountry505983");

                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.User", "ModifiedByNavigation")
                        .WithMany("CountryModifiedByNavigations")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("FKCountry744364");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("ModifiedByNavigation");
                });

            modelBuilder.Entity("eTouristAgencyAPI.Services.Database.Models.EmailVerification", b =>
                {
                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.EntityCodeValue", "EmailVerificationType")
                        .WithMany("EmailVerifications")
                        .HasForeignKey("EmailVerificationTypeId")
                        .IsRequired()
                        .HasConstraintName("FKEmailVerif701141");

                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.User", "User")
                        .WithMany("EmailVerifications")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FKEmailVerif613795");

                    b.Navigation("EmailVerificationType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("eTouristAgencyAPI.Services.Database.Models.EntityCodeValue", b =>
                {
                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.User", "CreatedByNavigation")
                        .WithMany("EntityCodeValueCreatedByNavigations")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FKEntityCode596278");

                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.EntityCode", "EntityCode")
                        .WithMany("EntityCodeValues")
                        .HasForeignKey("EntityCodeId")
                        .IsRequired()
                        .HasConstraintName("FKEntityCode668051");

                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.User", "ModifiedByNavigation")
                        .WithMany("EntityCodeValueModifiedByNavigations")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("FKEntityCode834659");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("EntityCode");

                    b.Navigation("ModifiedByNavigation");
                });

            modelBuilder.Entity("eTouristAgencyAPI.Services.Database.Models.Hotel", b =>
                {
                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.City", "City")
                        .WithMany("Hotels")
                        .HasForeignKey("CityId")
                        .IsRequired()
                        .HasConstraintName("FKHotel717322");

                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.User", "CreatedByNavigation")
                        .WithMany("HotelCreatedByNavigations")
                        .HasForeignKey("CreatedBy")
                        .IsRequired()
                        .HasConstraintName("FKHotel65883");

                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.User", "ModifiedByNavigation")
                        .WithMany("HotelModifiedByNavigations")
                        .HasForeignKey("ModifiedBy")
                        .IsRequired()
                        .HasConstraintName("FKHotel827501");

                    b.Navigation("City");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("ModifiedByNavigation");
                });

            modelBuilder.Entity("eTouristAgencyAPI.Services.Database.Models.HotelImage", b =>
                {
                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.User", "CreatedByNavigation")
                        .WithMany("HotelImageCreatedByNavigations")
                        .HasForeignKey("CreatedBy")
                        .IsRequired()
                        .HasConstraintName("FKHotelImage772530");

                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.Hotel", "Hotel")
                        .WithMany("HotelImages")
                        .HasForeignKey("HotelId")
                        .IsRequired()
                        .HasConstraintName("FKHotelImage536976");

                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.User", "ModifiedByNavigation")
                        .WithMany("HotelImageModifiedByNavigations")
                        .HasForeignKey("ModifiedBy")
                        .IsRequired()
                        .HasConstraintName("FKHotelImage10912");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("Hotel");

                    b.Navigation("ModifiedByNavigation");
                });

            modelBuilder.Entity("eTouristAgencyAPI.Services.Database.Models.Offer", b =>
                {
                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.EntityCodeValue", "BoardType")
                        .WithMany("OfferBoardTypes")
                        .HasForeignKey("BoardTypeId")
                        .HasConstraintName("FK__Offer__BoardType__4D5F7D71");

                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.User", "CreatedByNavigation")
                        .WithMany("OfferCreatedByNavigations")
                        .HasForeignKey("CreatedBy")
                        .IsRequired()
                        .HasConstraintName("FKOffer882796");

                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.Hotel", "Hotel")
                        .WithMany("Offers")
                        .HasForeignKey("HotelId")
                        .IsRequired()
                        .HasConstraintName("FKOffer118351");

                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.User", "ModifiedByNavigation")
                        .WithMany("OfferModifiedByNavigations")
                        .HasForeignKey("ModifiedBy")
                        .IsRequired()
                        .HasConstraintName("FKOffer644415");

                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.EntityCodeValue", "OfferStatus")
                        .WithMany("OfferOfferStatuses")
                        .HasForeignKey("OfferStatusId")
                        .IsRequired()
                        .HasConstraintName("FKOffer728835");

                    b.Navigation("BoardType");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("Hotel");

                    b.Navigation("ModifiedByNavigation");

                    b.Navigation("OfferStatus");
                });

            modelBuilder.Entity("eTouristAgencyAPI.Services.Database.Models.OfferDiscount", b =>
                {
                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.User", "CreatedByNavigation")
                        .WithMany("OfferDiscountCreatedByNavigations")
                        .HasForeignKey("CreatedBy")
                        .IsRequired()
                        .HasConstraintName("FKOfferDisco532645");

                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.EntityCodeValue", "DiscountType")
                        .WithMany("OfferDiscounts")
                        .HasForeignKey("DiscountTypeId")
                        .IsRequired()
                        .HasConstraintName("FKOfferDisco780000");

                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.User", "ModifiedByNavigation")
                        .WithMany("OfferDiscountModifiedByNavigations")
                        .HasForeignKey("ModifiedBy")
                        .IsRequired()
                        .HasConstraintName("FKOfferDisco771026");

                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.Offer", "Offer")
                        .WithMany("OfferDiscounts")
                        .HasForeignKey("OfferId")
                        .IsRequired()
                        .HasConstraintName("FKOfferDisco517182");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("DiscountType");

                    b.Navigation("ModifiedByNavigation");

                    b.Navigation("Offer");
                });

            modelBuilder.Entity("eTouristAgencyAPI.Services.Database.Models.OfferDocument", b =>
                {
                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.User", "CreatedByNavigation")
                        .WithMany("OfferDocumentCreatedByNavigations")
                        .HasForeignKey("CreatedBy")
                        .IsRequired()
                        .HasConstraintName("FKOfferDocum70028");

                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.Offer", "IdNavigation")
                        .WithOne("OfferDocument")
                        .HasForeignKey("eTouristAgencyAPI.Services.Database.Models.OfferDocument", "Id")
                        .IsRequired()
                        .HasConstraintName("FKOfferDocum817671");

                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.User", "ModifiedByNavigation")
                        .WithMany("OfferDocumentModifiedByNavigations")
                        .HasForeignKey("ModifiedBy")
                        .IsRequired()
                        .HasConstraintName("FKOfferDocum308409");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("IdNavigation");

                    b.Navigation("ModifiedByNavigation");
                });

            modelBuilder.Entity("eTouristAgencyAPI.Services.Database.Models.OfferImage", b =>
                {
                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.User", "CreatedByNavigation")
                        .WithMany("OfferImageCreatedByNavigations")
                        .HasForeignKey("CreatedBy")
                        .IsRequired()
                        .HasConstraintName("FKOfferImage632224");

                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.Offer", "IdNavigation")
                        .WithOne("OfferImage")
                        .HasForeignKey("eTouristAgencyAPI.Services.Database.Models.OfferImage", "Id")
                        .IsRequired()
                        .HasConstraintName("FKOfferImage255475");

                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.User", "ModifiedByNavigation")
                        .WithMany("OfferImageModifiedByNavigations")
                        .HasForeignKey("ModifiedBy")
                        .IsRequired()
                        .HasConstraintName("FKOfferImage870605");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("IdNavigation");

                    b.Navigation("ModifiedByNavigation");
                });

            modelBuilder.Entity("eTouristAgencyAPI.Services.Database.Models.Passenger", b =>
                {
                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.User", "CreatedByNavigation")
                        .WithMany("PassengerCreatedByNavigations")
                        .HasForeignKey("CreatedBy")
                        .IsRequired()
                        .HasConstraintName("FK__Passenger__Creat__7849DB76");

                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.User", "ModifiedByNavigation")
                        .WithMany("PassengerModifiedByNavigations")
                        .HasForeignKey("ModifiedBy")
                        .IsRequired()
                        .HasConstraintName("FK__Passenger__Modif__793DFFAF");

                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.Reservation", "Reservation")
                        .WithMany("Passengers")
                        .HasForeignKey("ReservationId")
                        .IsRequired()
                        .HasConstraintName("FK__Passenger__Reser__756D6ECB");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("ModifiedByNavigation");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("eTouristAgencyAPI.Services.Database.Models.PassengerDocument", b =>
                {
                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.User", "CreatedByNavigation")
                        .WithMany("PassengerDocumentCreatedByNavigations")
                        .HasForeignKey("CreatedBy")
                        .IsRequired()
                        .HasConstraintName("FK__Passenger__Creat__318258D2");

                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.Passenger", "IdNavigation")
                        .WithOne("PassengerDocument")
                        .HasForeignKey("eTouristAgencyAPI.Services.Database.Models.PassengerDocument", "Id")
                        .IsRequired()
                        .HasConstraintName("FK__PassengerDoc__Id__2EA5EC27");

                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.User", "ModifiedByNavigation")
                        .WithMany("PassengerDocumentModifiedByNavigations")
                        .HasForeignKey("ModifiedBy")
                        .IsRequired()
                        .HasConstraintName("FK__Passenger__Modif__32767D0B");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("IdNavigation");

                    b.Navigation("ModifiedByNavigation");
                });

            modelBuilder.Entity("eTouristAgencyAPI.Services.Database.Models.Reservation", b =>
                {
                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.User", "CreatedByNavigation")
                        .WithMany("ReservationCreatedByNavigations")
                        .HasForeignKey("CreatedBy")
                        .IsRequired()
                        .HasConstraintName("FKReservatio194016");

                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.User", "ModifiedByNavigation")
                        .WithMany("ReservationModifiedByNavigations")
                        .HasForeignKey("ModifiedBy")
                        .IsRequired()
                        .HasConstraintName("FKReservatio955634");

                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.OfferDiscount", "OfferDiscount")
                        .WithMany("Reservations")
                        .HasForeignKey("OfferDiscountId")
                        .HasConstraintName("FKReservatio911731");

                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.EntityCodeValue", "ReservationStatus")
                        .WithMany("Reservations")
                        .HasForeignKey("ReservationStatusId")
                        .IsRequired()
                        .HasConstraintName("FKReservatio127771");

                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.Room", "Room")
                        .WithMany("Reservations")
                        .HasForeignKey("RoomId")
                        .IsRequired()
                        .HasConstraintName("FK__Reservati__RoomI__3B40CD36");

                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.User", "User")
                        .WithMany("ReservationUsers")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FKReservatio730164");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("ModifiedByNavigation");

                    b.Navigation("OfferDiscount");

                    b.Navigation("ReservationStatus");

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("eTouristAgencyAPI.Services.Database.Models.ReservationPayment", b =>
                {
                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.User", "CreatedByNavigation")
                        .WithMany("ReservationPaymentCreatedByNavigations")
                        .HasForeignKey("CreatedBy")
                        .IsRequired()
                        .HasConstraintName("FKReservatio536480");

                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.User", "ModifiedByNavigation")
                        .WithMany("ReservationPaymentModifiedByNavigations")
                        .HasForeignKey("ModifiedBy")
                        .IsRequired()
                        .HasConstraintName("FKReservatio196729");

                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.Reservation", "Reservation")
                        .WithMany("ReservationPayments")
                        .HasForeignKey("ReservationId")
                        .IsRequired()
                        .HasConstraintName("FKReservatio264129");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("ModifiedByNavigation");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("eTouristAgencyAPI.Services.Database.Models.ReservationReview", b =>
                {
                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.User", "CreatedByNavigation")
                        .WithMany("ReservationReviewCreatedByNavigations")
                        .HasForeignKey("CreatedBy")
                        .IsRequired()
                        .HasConstraintName("FKReservatio887494");

                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.Reservation", "IdNavigation")
                        .WithOne("ReservationReview")
                        .HasForeignKey("eTouristAgencyAPI.Services.Database.Models.ReservationReview", "Id")
                        .IsRequired()
                        .HasConstraintName("FKReservatio885176");

                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.User", "ModifiedByNavigation")
                        .WithMany("ReservationReviewModifiedByNavigations")
                        .HasForeignKey("ModifiedBy")
                        .IsRequired()
                        .HasConstraintName("FKReservatio350886");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("IdNavigation");

                    b.Navigation("ModifiedByNavigation");
                });

            modelBuilder.Entity("eTouristAgencyAPI.Services.Database.Models.Room", b =>
                {
                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.User", "CreatedByNavigation")
                        .WithMany("RoomCreatedByNavigations")
                        .HasForeignKey("CreatedBy")
                        .IsRequired()
                        .HasConstraintName("FKRoom427895");

                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.User", "ModifiedByNavigation")
                        .WithMany("RoomModifiedByNavigations")
                        .HasForeignKey("ModifiedBy")
                        .IsRequired()
                        .HasConstraintName("FKRoom189514");

                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.Offer", "Offer")
                        .WithMany("Rooms")
                        .HasForeignKey("OfferId")
                        .IsRequired()
                        .HasConstraintName("FKRoom493867");

                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.RoomType", "RoomType")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomTypeId")
                        .IsRequired()
                        .HasConstraintName("FKRoom188940");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("ModifiedByNavigation");

                    b.Navigation("Offer");

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("eTouristAgencyAPI.Services.Database.Models.RoomType", b =>
                {
                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.User", "CreatedByNavigation")
                        .WithMany("RoomTypeCreatedByNavigations")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FKRoomType639052");

                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.User", "ModifiedByNavigation")
                        .WithMany("RoomTypeModifiedByNavigations")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("FKRoomType400671");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("ModifiedByNavigation");
                });

            modelBuilder.Entity("eTouristAgencyAPI.Services.Database.Models.UserFirebaseToken", b =>
                {
                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.User", "User")
                        .WithMany("UserFirebaseTokens")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__UserFireb__UserI__41B8C09B");

                    b.Navigation("User");
                });

            modelBuilder.Entity("eTouristAgencyAPI.Services.Database.Models.UserTag", b =>
                {
                    b.HasOne("eTouristAgencyAPI.Services.Database.Models.User", "User")
                        .WithMany("UserTags")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__UserTag__UserId__1B9317B3");

                    b.Navigation("User");
                });

            modelBuilder.Entity("eTouristAgencyAPI.Services.Database.Models.City", b =>
                {
                    b.Navigation("Hotels");
                });

            modelBuilder.Entity("eTouristAgencyAPI.Services.Database.Models.Country", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("eTouristAgencyAPI.Services.Database.Models.EntityCode", b =>
                {
                    b.Navigation("EntityCodeValues");
                });

            modelBuilder.Entity("eTouristAgencyAPI.Services.Database.Models.EntityCodeValue", b =>
                {
                    b.Navigation("EmailVerifications");

                    b.Navigation("OfferBoardTypes");

                    b.Navigation("OfferDiscounts");

                    b.Navigation("OfferOfferStatuses");

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("eTouristAgencyAPI.Services.Database.Models.Hotel", b =>
                {
                    b.Navigation("HotelImages");

                    b.Navigation("Offers");
                });

            modelBuilder.Entity("eTouristAgencyAPI.Services.Database.Models.Offer", b =>
                {
                    b.Navigation("OfferDiscounts");

                    b.Navigation("OfferDocument");

                    b.Navigation("OfferImage");

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("eTouristAgencyAPI.Services.Database.Models.OfferDiscount", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("eTouristAgencyAPI.Services.Database.Models.Passenger", b =>
                {
                    b.Navigation("PassengerDocument");
                });

            modelBuilder.Entity("eTouristAgencyAPI.Services.Database.Models.Reservation", b =>
                {
                    b.Navigation("Passengers");

                    b.Navigation("ReservationPayments");

                    b.Navigation("ReservationReview");
                });

            modelBuilder.Entity("eTouristAgencyAPI.Services.Database.Models.Room", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("eTouristAgencyAPI.Services.Database.Models.RoomType", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("eTouristAgencyAPI.Services.Database.Models.User", b =>
                {
                    b.Navigation("CityCreatedByNavigations");

                    b.Navigation("CityModifiedByNavigations");

                    b.Navigation("CountryCreatedByNavigations");

                    b.Navigation("CountryModifiedByNavigations");

                    b.Navigation("EmailVerifications");

                    b.Navigation("EntityCodeValueCreatedByNavigations");

                    b.Navigation("EntityCodeValueModifiedByNavigations");

                    b.Navigation("HotelCreatedByNavigations");

                    b.Navigation("HotelImageCreatedByNavigations");

                    b.Navigation("HotelImageModifiedByNavigations");

                    b.Navigation("HotelModifiedByNavigations");

                    b.Navigation("OfferCreatedByNavigations");

                    b.Navigation("OfferDiscountCreatedByNavigations");

                    b.Navigation("OfferDiscountModifiedByNavigations");

                    b.Navigation("OfferDocumentCreatedByNavigations");

                    b.Navigation("OfferDocumentModifiedByNavigations");

                    b.Navigation("OfferImageCreatedByNavigations");

                    b.Navigation("OfferImageModifiedByNavigations");

                    b.Navigation("OfferModifiedByNavigations");

                    b.Navigation("PassengerCreatedByNavigations");

                    b.Navigation("PassengerDocumentCreatedByNavigations");

                    b.Navigation("PassengerDocumentModifiedByNavigations");

                    b.Navigation("PassengerModifiedByNavigations");

                    b.Navigation("ReservationCreatedByNavigations");

                    b.Navigation("ReservationModifiedByNavigations");

                    b.Navigation("ReservationPaymentCreatedByNavigations");

                    b.Navigation("ReservationPaymentModifiedByNavigations");

                    b.Navigation("ReservationReviewCreatedByNavigations");

                    b.Navigation("ReservationReviewModifiedByNavigations");

                    b.Navigation("ReservationUsers");

                    b.Navigation("RoomCreatedByNavigations");

                    b.Navigation("RoomModifiedByNavigations");

                    b.Navigation("RoomTypeCreatedByNavigations");

                    b.Navigation("RoomTypeModifiedByNavigations");

                    b.Navigation("UserFirebaseTokens");

                    b.Navigation("UserTags");
                });
#pragma warning restore 612, 618
        }
    }
}
